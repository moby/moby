// Code generated by go-swagger; DO NOT EDIT.

package container

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ChangeType Kind of change
//
// Can be one of:
//
// - `0`: Modified ("C")
// - `1`: Added ("A")
// - `2`: Deleted ("D")
//
// swagger:model ChangeType
type ChangeType uint8

// for schema
var changeTypeEnum []interface{}

func init() {
	var res []ChangeType
	if err := json.Unmarshal([]byte(`[0,1,2]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		changeTypeEnum = append(changeTypeEnum, v)
	}
}

func (m ChangeType) validateChangeTypeEnum(path, location string, value ChangeType) error {
	if err := validate.EnumCase(path, location, value, changeTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this change type
func (m ChangeType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateChangeTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this change type based on context it is used
func (m ChangeType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
