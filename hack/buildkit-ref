#!/usr/bin/env bash
# This script returns the current BuildKit version and revision being used in moby.

: "${BUILDKIT_REPO=moby/buildkit}"
: "${BUILDKIT_REF=}"

: "${BUILDKIT_VERSION=}"
: "${BUILDKIT_REVISION=}"

if [ -z "$BUILDKIT_REF" ]; then
	# get buildkit version from vendor.mod if not set
	BUILDKIT_REF=$(./hack/with-go-mod.sh go list -mod=mod -modfile=vendor.mod -u -m -f '{{.Version}}' "github.com/${BUILDKIT_REPO}")
fi
if [[ "${BUILDKIT_REF}" == *-*-* ]]; then
	# if pseudo-version, figure out just the uncommon sha (https://github.com/golang/go/issues/34745)
	BUILDKIT_REF=$(echo "${BUILDKIT_REF}" | awk -F"-" '{print $NF}' | awk 'BEGIN{FIELDWIDTHS="7"} {print $1}')
	# use GitHub API to return full sha to be able to use it as ref
	BUILDKIT_REF=$(curl -s "https://api.github.com/repos/${BUILDKIT_REPO}/commits/${BUILDKIT_REF}" | sed -nE '$!{:a;N;$!ba;s/\n//g;s/"sha":[^"]*"([^"]*)"/\n\1\nSHA/g};/^[^\n]*\nSHA/P;D' | head -n 1)
fi
export BUILDKIT_REF

repoDir=$(mktemp -d -t buildkit-repo.XXXXXXXXXX)
trap 'rm -rf "${repoDir}"' EXIT

(
	cd "$repoDir" || exit
	git init -q .
	git remote add origin "https://github.com/${BUILDKIT_REPO}.git"
	git fetch -q origin "${BUILDKIT_REF}" +refs/tags/*:refs/tags/*
	git checkout -q FETCH_HEAD
	git describe --match 'v[0-9]*' --dirty='.m' --always --tags > .bkversion
	git rev-parse HEAD > .bkrevision
)

export "BUILDKIT_VERSION=$(cat "$repoDir"/.bkversion)"
export "BUILDKIT_REVISION=$(cat "$repoDir"/.bkrevision)"
