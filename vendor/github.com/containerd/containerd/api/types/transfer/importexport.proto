/*
	Copyright The containerd Authors.

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/

syntax = "proto3";

package containerd.types.transfer;

option go_package = "github.com/containerd/containerd/api/types/transfer";

import "github.com/containerd/containerd/api/types/platform.proto";

message ImageImportStream {
	// Stream is used to identify the binary input stream for the import operation.
	// The stream uses the transfer binary stream protocol with the client as the sender.
	// The binary data is expected to be a raw tar stream.
	string stream = 1;

	string media_type = 2;

	bool force_compress = 3;
}

message ImageExportStream {
	// Stream is used to identify the binary output stream for the export operation.
	// The stream uses the transfer binary stream protocol with the server as the sender.
	// The binary data is expected to be a raw tar stream.
	string stream = 1;

	string media_type = 2;

	// The specified platforms
	repeated types.Platform platforms = 3;
	// Whether to include all platforms
	bool all_platforms = 4;
	// Skips the creation of the Docker compatible manifest.json file
	bool skip_compatibility_manifest = 5;
	// Excludes non-distributable blobs such as Windows base layers.
	bool skip_non_distributable = 6;
}
