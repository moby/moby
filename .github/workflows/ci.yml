name: ci

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
      - '[0-9]+.[0-9]{2}'
    tags:
      - 'v*'
  pull_request:

env:
  PLATFORM: "Moby Engine"
  PRODUCT: "Moby"
  DEFAULT_PRODUCT_LICENSE: "Moby"
  PACKAGER_NAME: "Moby"

jobs:
  binary:
    runs-on: ubuntu-20.04
    env:
      DESTDIR: ./build
    strategy:
      fail-fast: false
      matrix:
        linkmode:
          - static
          - dynamic
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build
        uses: docker/bake-action@v1
        with:
          targets: binary
          set: |
            *.cache-from=type=gha,scope=build-${{ matrix.linkmode }}
            *.cache-to=type=gha,scope=build-${{ matrix.linkmode }},mode=max
        env:
          DOCKER_LINKMODE: ${{ matrix.linkmode }}
      -
        name: List artifacts
        run: |
          tree -nh ${{ env.DESTDIR }}
      -
        name: Check artifacts
        run: |
          find ${{ env.DESTDIR }} -type f -exec file -e ascii -- {} +
      -
        name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binary-${{ matrix.linkmode }}
          path: ${{ env.DESTDIR }}
          if-no-files-found: error
          retention-days: 7

  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.platforms.outputs.matrix }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Create matrix
        id: platforms
        run: |
          echo ::set-output name=matrix::$(docker buildx bake binary-cross --print | jq -cr '.target."binary-cross".platforms')
      -
        name: Show matrix
        run: |
          echo ${{ steps.platforms.outputs.matrix }}

  cross:
    runs-on: ubuntu-20.04
    needs:
      - prepare
    env:
      DESTDIR: ./build
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build
        uses: docker/bake-action@v1
        with:
          targets: all
          set: |
            *.platform=${{ matrix.platform }}
            *.cache-from=type=gha,scope=cross-${{ env.PLATFORM_PAIR }}
            *.cache-to=type=gha,scope=cross-${{ env.PLATFORM_PAIR }}
      -
        name: List artifacts
        run: |
          tree -nh ${{ env.DESTDIR }}
      -
        name: Check artifacts
        run: |
          find ${{ env.DESTDIR }} -type f -exec file -e ascii -- {} +
      -
        name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cross-${{ env.PLATFORM_PAIR }}
          path: ${{ env.DESTDIR }}
          if-no-files-found: error
          retention-days: 7

  test-buildkit:
    needs:
      - binary
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        pkg:
          - ./client
          - ./cmd/buildctl
          - ./solver
          - ./frontend
          - ./frontend/dockerfile
        typ:
          - integration
        include:
          - pkg: ./...
            skip-integration-tests: 1
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          path: moby
      -
        name: BuildKit ref
        run: |
          ./hack/go-mod-prepare.sh
          echo "BUILDKIT_REF=$(./hack/buildkit-ref)" >> $GITHUB_ENV
        working-directory: moby
      -
        name: Checkout BuildKit ${{ env.BUILDKIT_REF }}
        uses: actions/checkout@v3
        with:
          repository: "moby/buildkit"
          ref: ${{ env.BUILDKIT_REF }}
          path: buildkit
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Download binary artifacts
        uses: actions/download-artifact@v3
        with:
          name: binary-static
          path: ./buildkit/build/moby/
      -
        name: Update daemon.json
        run: |
          sudo rm /etc/docker/daemon.json
          sudo service docker restart
          docker version
          docker info
      -
        name: Test
        run: |
          ./hack/test ${{ matrix.typ }}
        env:
          CONTEXT: "."
          TEST_DOCKERD: "1"
          TEST_DOCKERD_BINARY: "./build/moby/dockerd"
          TESTPKGS: "${{ matrix.pkg }}"
          TESTFLAGS: "-v --parallel=1 --timeout=30m --run=//worker=dockerd$"
          SKIP_INTEGRATION_TESTS: "${{ matrix.skip-integration-tests }}"
        working-directory: buildkit
